
// Include theming for Angular Material with `mat.theme()`.
// This Sass mixin will define CSS variables that are used for styling Angular Material
// components according to the Material 3 design spec.
// Learn more about theming and how to use it for your application's
// custom components at https://material.angular.dev/guide/theming
@use '@angular/material' as mat;

html {
  @include mat.theme((
    color: (
      primary: mat.$magenta-palette,
      tertiary: mat.$violet-palette,
    ),
    typography: Roboto,
    density: 0,
  ));
}

body {
  // Default the application to a light color theme. This can be changed to
  // `dark` to enable the dark color theme, or to `light dark` to defer to the
  // user's system settings.
  color-scheme: dark;

  // Set a default background, font and text colors for the application using
  // Angular Material's system-level CSS variables. Learn more about these
  // variables at https://material.angular.dev/guide/system-variables
  background-color: var(--mat-sys-surface);
  color: var(--mat-sys-on-surface);
  font: var(--mat-sys-body-medium);

  // Reset the user agent margin.
  margin: 0;
}
/* You can add global styles to this file, and also import other style files */

html, body { height: 100%; }
body { margin: 0; font-family: Roboto, "Helvetica Neue", sans-serif; }

.form {
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: 100vh;

  h1 {
    margin-bottom: 30px;
  }

  &__container {
    width: 100%;
    max-width: 400px;
  }

  hr {
    margin: 30px 0;
  }

  mat-form-field {
    width: 100%;
    margin-bottom: 20px;
  }

  .mdc-button {
    width: 100%;
  }

  .small-text {
    font-size: 14px;
    display: block;
    text-align: center;

    &.providers {
      margin-bottom: 30px;
    }

    &.log-in-redirect {
      margin-top: 30px;

      a {
        text-decoration: underline;
        cursor: pointer;
      }
    }
  }
}
